---
import Layout from '../../layouts/Layout.astro';
import AppWithFooter from '../../components/AppWithFooter.tsx';
import { useTranslations, defaultLanguage, generateLanguagePaths, languages } from '../../i18n/config';

// Define all possible language routes at build time
export function getStaticPaths() {
  return generateLanguagePaths();
}

// Get language from params
const { lang = defaultLanguage } = Astro.params;
const t = useTranslations(lang);

// Structured data dla SEO
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": "Coderno",
  "description": t('seo.description'),
  "url": `https://coderno.pl${lang === defaultLanguage ? '' : '/' + lang}`,
  "logo": "https://coderno.pl/logo.png",
  "contactPoint": {
    "@type": "ContactPoint",
    "contactType": "sales",
    "availableLanguage": Object.keys(languages).map(l => l === 'pl' ? 'Polish' : 'English')
  },
  "areaServed": lang === 'pl' ? "PL" : "Worldwide",
  "serviceType": lang === 'pl' ? [
    "Rozwój oprogramowania",
    "Tworzenie MVP",
    "Aplikacje AI",
    "Automatyzacja procesów",
    "Optymalizacja systemów firmowych",
    "Konsultacje technologiczne"
  ] : [
    "Software Development",
    "MVP Creation",
    "AI Applications", 
    "Process Automation",
    "Business System Optimization",
    "Technology Consulting"
  ],
  "offers": {
    "@type": "Offer",
    "serviceType": "Software Development",
    "description": t('seo.description')
  }
};

const pageTitle = t('seo.title');
const pageDescription = t('seo.description');
const pageKeywords = t('seo.keywords');
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  keywords={pageKeywords}
  lang={lang}
  jsonLd={jsonLd}
>
  <AppWithFooter client:load lang={lang} />
</Layout> 